subdata <- subset( Power, V1 == " 01/01/2007" && Date == "02/02/2007")
subdata <- subset( power, V1 == " 01/01/2007" && Date == "02/02/2007")
subdata <- subset( power, V1 == " 01/01/2007" && V1 == "02/02/2007")
subdate
subdata
subdata <- subset( power, V1 == " 2007-02-01" && V1 == "2007-02-02")
subdata
subset(power, V1 == 2007-02-01)
subset(power, V1 == "2007-02-01")
subdata <- subset( power, V1 == " 2007-02-01" && V1 == "2007-02-02")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
head(subdata)
tail(subdata)
power["date1",]
power$V1["date1",]
date1<- as.Date(2007-02-01)
date1<- as.Date("2007-02-01")
class(date2)
class(date1)
power$V1["date1",]
power$V1[date1,]
library(ggplot2)
View(subdata)
hist(subdata$V3)
class(subdata$V3)
subdata$V3<- as.numeric(subdata$V3)
class(subdata$V3)
hist(subdata$V3)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts", ylab="Frequency")
title(main="Globl Active Power")
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts", ylab="Frequency")
title(main="Globl Active Power")
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts", ylab="Frequency", main="Globl Active Power")
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts", ylab="Frequency", main="Global Active Power")
power<- read.table("./data/household_power_consumption.txt", sep=";")
power$V1<- as.Date(power$V1)
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subdata$V3<- as.numeric(subdata$V3)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts", ylab="Frequency", main="Global Active Power")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subset(power, V1== "2007-02-01")
subset(power, V1== "2007-02-01",)
class(power$V1)
power$V1<- as.Date(power$V1)
head(power$V1)
?as.Date
power$V1<- as.Date(power$V1, format="%d-%m-%Y")
class(power$V1)
power<- read.table("./data/household_power_consumption.txt", sep=";")
power$V1<- as.Date(power$V1, format="%d-%m-%Y")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subdata$V3<- as.numeric(subdata$V3)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
power$V1<- as.Date(power$V1, format="%d-%m-%Y")
class(power$V1)
head(power$V1)
head(power)
power<- read.table("./data/household_power_consumption.txt", sep=";")
power$V1<- as.Date(power$V1, format="%Y-%m-%d")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subdata$V3<- as.numeric(subdata$V3)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
dev.copy(png, file = "plot1.png")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subset(power, V1=="2007-02-01")
head(power)
power<- read.table("./data/household_power_consumption.txt", sep=";")
head(power$V1)
as.Date(power$V1)
as.Date(power$V1, format="%d-%m-%Y")
as.Date(power$V1, format="%d/%m/%Y")
power$V1<- as.Date(power$V1, format="%d/%m/%Y")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subdata$V3<- as.numeric(subdata$V3)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
dev.copy(png, file = "plot1.png")
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power", ylim="c(0,1200")
?ylim
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power"
)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", ma="Global Active Power"
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", ma="Global Active Power")
power<- read.table("./data/household_power_consumption.txt", sep=";")
power$V1<- as.Date(power$V1, format="%d/%m/%Y")
subdata <- subset( power, V1 == " 2007-02-01" | V1 == "2007-02-02")
subdata$V3<- as.numeric(subdata$V3)
hist(subdata$V3, col="red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power")
dev.copy(png, file = "plot1.png")
?dev.copy
dev.copy(png, file = "plot1.png", width=480, height= 480)
dev.copy(png, file = "plot1.png", width=480, height= 280)
?plot
plot(subdata$V2, subdata$V3)
hist(subdata$V3, col="red")
View(subdata)
library(plyr)
##read in all the ".txt" files
##test folder
ytest<- read.table("./test/y_test.txt")
xtest<- read.table("./test/x_test.txt")
subjecttest<- read.table("./test/subject_test.txt")
##train folder
ytrain<- read.table("./train/y_train.txt")
xtrain<- read.table("./train/x_train.txt")
subjecttrain<- read.table("./train/subject_train.txt")
##features and activites lables
features<- read.table("./features.txt", sep=" ")
activity_labels<- read.table("./activity_labels.txt")
## attach features to x test/train col names
colnames(xtest)<- features$V2
colnames(xtrain)<- features$V2
##give subjects and activites header names
colnames(subjecttrain)[1]<- "subjects"
colnames(subjecttest)[1]<- "subjects"
colnames(ytest)[1]<- "activities"
colnames(ytrain)[1]<- "activities"
##combine test data set with subject id's and activites
datatest<- cbind(subjecttest, ytest, xtest)
##combine train data set with subject id's and activites
datatrain<- cbind(subjecttrain, ytrain, xtrain)
##merge test and train data frames
dataset<- rbind(datatest, datatrain)
##apply activities as factor names
dataset$activities<- as.factor(dataset$activities)
## set factor levels for activities
dataset$activities<- factor(dataset$activities, labels=activity_labels$V2)
setwd("~/Coursera/Cleaning Data/UCI HAR Dataset")
library(plyr)
##read in all the ".txt" files
##test folder
ytest<- read.table("./test/y_test.txt")
xtest<- read.table("./test/x_test.txt")
subjecttest<- read.table("./test/subject_test.txt")
##train folder
ytrain<- read.table("./train/y_train.txt")
xtrain<- read.table("./train/x_train.txt")
subjecttrain<- read.table("./train/subject_train.txt")
##features and activites lables
features<- read.table("./features.txt", sep=" ")
activity_labels<- read.table("./activity_labels.txt")
## attach features to x test/train col names
colnames(xtest)<- features$V2
colnames(xtrain)<- features$V2
##give subjects and activites header names
colnames(subjecttrain)[1]<- "subjects"
colnames(subjecttest)[1]<- "subjects"
colnames(ytest)[1]<- "activities"
colnames(ytrain)[1]<- "activities"
##combine test data set with subject id's and activites
datatest<- cbind(subjecttest, ytest, xtest)
##combine train data set with subject id's and activites
datatrain<- cbind(subjecttrain, ytrain, xtrain)
##merge test and train data frames
dataset<- rbind(datatest, datatrain)
##apply activities as factor names
dataset$activities<- as.factor(dataset$activities)
## set factor levels for activities
dataset$activities<- factor(dataset$activities, labels=activity_labels$V2)
setwd("~/Coursera/RepData_PeerAssessment1")
setwd("~/Coursera/RepData_PeerAssessment1")
setwd("~/Coursera/Rep Research/RepData_PeerAssessment1")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
data<- read.csv("activity.csv")
datasub<- group_by(data, date, rm.na=TRUE)
mean<- summarise(datasub, count=count(data$steps), mean=mean(data$steps), median=median(data$steps))
## What is mean total number of steps taken per day?
hist(steps, data=day)
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
library(dplyr)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
library(dplyr)
## Loading and preprocessing the data
data<- read.csv("activity.csv")
datasub<- group_by(data, date, rm.na=TRUE)
mean<- summarise(datasub, count=count(data$steps), mean=mean(data$steps), median=median(data$steps))
## What is mean total number of steps taken per day?
hist(steps, data=day)
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
head(datasub)
View(data)
datasub<- group_by(data, date)
View(datasub)
View(datasub)
mean<- summarise(datasub, count=count(data$steps), mean=mean(data$steps), median=median(data$steps))
mean<- summarise(data, count=count(data$steps), mean=mean(data$steps), median=median(data$steps))
mean<- summarise(data, count=count(data$steps), mean=mean(data$steps), median=median(data$steps))
mean<- summarise(data, count=count(data$steps), mean=mean(data$steps), median=median(data$steps))
str(data)
?summarise
mean<- summarise(data, count=count(data$steps))
count(data$steps)
?count
tally(data$steps)
mean<- summarise(data, sum=tally(data$steps))
?summarise
sum(data, steps)
sum(data$steps)
sum(data$steps, rm.na=T)
sum(data$steps, na.rm=T)
tally(data$steps, na.rm=T)
mean<- summarise(data, total steps=sum(data$steps, na.rm=T))
mean<- summarise(data, steps=sum(data$steps, na.rm=T))
hist(data$steps, data=data)
hist(data$date, data=data)
str(data)
data$date<- ad.Date(as.numeric(data$date))
data$date<- as.Date(as.numeric(data$date))
data$date<- as.Date(as.numeric(data$date),)
data$date
as.numeric(data$date)
data$date<- as.Date(as.charater(data$date),)
data$date<- as.Date(as.character(data$date),)
str(data)
hist(data$steps, data=data)
hist(data$steps, data=data)
hist(data$steps)
plot(data$steps, xlab="Year", ylab="Total Emissions (Megatons)", type="l", col="red", main="US Total Annual PM2.5 Emissions")
plot(data$steps)
plot(data$steps, type=hist)
?plot
?hist
hist(data$steps)
str(data)
datasub<- data[,1:2]
hist(datasub)
hist(datasub$steps)
min(datasub$date)
max(datasub$date)
library(ggplot2)
ggplot(data, aes(x=data$steps))
ggplot(data, aes(x=data$steps) + geom_histogram())
qplot(data$steps)
qplot(data$steps, data$date)
qplot(steps, data=datasub)
hist(data$steps, "day")
hist(data$date, "day")
hist(data$steps, "day")
hist(data$steps)
count(data$steps)
summary(data%steps)
summary(data$steps)
dates<- group_by(data, date)
mnsteps<- summarise(dates, count= n(), mean=mean(steps, na.rm=T))
View(mnsteps)
mnsteps<- summarise(dates, mean=mean(steps, na.rm=T))
hist(mnsteps)
hist(mnsteps$mean)
mnsteps<- summarise(dates, mean=mean(steps, na.rm=T), sum=sum(data$steps))
mnsteps<- summarise(dates, mean=mean(steps, na.rm=T), sum=tally(data$steps))
mnsteps<- summarise(dates, mean=mean(steps, na.rm=T), mean=mean(data$steps))
mnsteps<- summarise(dates, mean=mean(steps, na.rm=T), sum=sum(steps))
View(mnsteps)
hist(mnsteps$sum)
plot(mnsteps$date, mnsteps$sum)
hist(data$steps)
mean(mnsteps$mean)
mean(mnsteps$mean, na.rm=T)
median(mnsteps$mean, na.rm=T)
median(data$steps, na.rm=T)
mean(data$steps, na.rm=T)
hist(data$steps, binwidth= 1)
?hist
hist(data$steps, breaks= 1)
hist(data$steps, breaks= 10)
hist(data$steps, breaks= 1)
hist(data$steps, breaks= 1000)
hist(data$steps, breaks= 100)
hist(data$steps, breaks= 00)
hist(data$steps, breaks= 50)
hist(data$steps, breaks= 50, main="Frequency of Steps Histogram", xlab="Number of Daily Steps")
summarise(data$interval)
int<- group_by(data, interval)
intsum<- summarise(int, mean=mean(int$steps))
int$steps
intsum<- summarise(int, mean=mean(int$steps, na.rm=T))
mean(int$steps)
head(int)
str(int)
str(data)
intsum<- summarise(int, mean=mean(steps, na.rm=T))
intsum<- summarise(int, mean=mean(steps, na.rm=T), median=median(steps, na.rm=T))
View(intsum)
plot(intsum$integer, intsum$mean)
plot(intsum$interval, intsum$mean)
plot(intsum$interval, intsum$mean, type="l")
which.max(intsum$mean)
names(intsum$interval)[which.max(intsum$mean),]
intsum$interval[which.max(intsum$mean),]
intsum$interval[max(intsum$mean),]
intsum$interval[max(intsum$mean)]
intsum$interval[,max(intsum$mean)]
intsum$interval[max(intsum$mean)]
max(intsum$mean)
intsum$interval[while.max(intsum$mean)]
intsum$interval[which.max(intsum$mean)]
summary(data)
na.count(data$steps)
?na.count
is.na(data$steps)
sum(is.na(data$steps))
Nas<-sum(is.na(data$steps))
lines(intsum$interval(835))
abline(intsum$interval(835))
abline(v=835)
abline(v=835, col="red")
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
library(Ameilia)
library(Amelia)
install.packages("Amelia")
library(Amelia)
?amelia
set.seed(123)
df <- data.frame(group = sample(c(letters[1:5]), 10e5, replace=T),
q_var = sample(c(rpois(10, 50), NA), 10e5, replace = T))
DT <- data.table(df)
library(data.table)
set.seed(123)
df <- data.frame(group = sample(c(letters[1:5]), 10e5, replace=T),
q_var = sample(c(rpois(10, 50), NA), 10e5, replace = T))
DT <- data.table(df)
View(DT)
View(DT)
View(DT)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
datacast<- dcast(data, date ~ variable, mean, na.rm=T)
library(reshape2)
datacast<- dcast(data, date ~ variable, mean, na.rm=T)
datacast<- dcast(data, date ~ date, mean, na.rm=T)
View(datacast)
datacast<- dcast(data, date ~ steps, mean, na.rm=T)
View(datacast)
datacast<- dcast(data, steps ~ date, mean, na.rm=T)
View(datacast)
datacast<- dcast(data, steps ~ interval, mean, na.rm=T)
View(datacast)
datacast<- dcast(data, interval ~ steps)
View(datacast)
datacast<- dcast(data, interval ~ steps, mean)
View(datacast)
imp1 <- ddply(df, ~ group, transform, q_var = impute.mean(q_var))
View(imp1)
imp2 <- DT[, lapply(.SD, impute.mean), by = "group"]
View(imp2)
imp1 <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
View(imp1)
View(data)
mean(imp1[interval == 120])
mean(imp1[interval == 120])
mean(imp1[imp1$interval == 120])
imp1$interval
str)imp1
str(imp1)
mean(imp1$steps[imp1$interval == 120])
mean(imp1$steps[imp1$interval == 105])
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
imp1 <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
hist(imp1$steps, breaks= 50, main="Frequency of Steps Histogram", xlab="Number of Daily Steps")
stmean<- mean(imp1$steps, na.rm=T)
stmean
stmedian<- median(imp1$steps, na.rm=T)
stmedian
dates<- group_by(data, date)
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
```{r, results="hide", echo=FALSE}
library(dplyr)
library(plyr)
library(ggplot2)
library(reshape2)
```
## Loading and preprocessing the data
```{r}
data<- read.csv("activity.csv")
dates<- group_by(data, date)
```
## What is mean total number of steps taken per day?
```{r}
hist(data$steps, breaks= 50, main="Frequency of Steps Histogram", xlab="Number of Daily Steps")
stmean<- mean(data$steps, na.rm=T)
stmean
stmedian<- median(data$steps, na.rm=T)
stmedian
```
## What is the average daily activity pattern?
```{r}
dates<- group_by(data, interval)
intsum<- summarise(dates, mean=mean(steps, na.rm=T), median=median(steps, na.rm=T))
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
intsum$interval[which.max(intsum$mean)]
```
## Imputing missing values
### Number of missing values
```{r}
Nas<-sum(is.na(data$steps))
Nas
```
### Impute NA value based on mean value for that interval
```{r}
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
imp1 <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
hist(imp1$steps, breaks= 50, main="Frequency of Steps Histogram", xlab="Number of Daily Steps")
stmean1<- mean(imp1$steps, na.rm=T)
stmean1
stmedian1<- median(imp1$steps, na.rm=T)
stmedian1
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
```
View(dates)
View(data)
dates<- group_by(data, interval)
intsum<- summarise(dates, mean=mean(steps, na.rm=T), median=median(steps, na.rm=T))
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
intsum$interval[which.max(intsum$mean)]
View(intsum)
par("lty")
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
intsum$interval[which.max(intsum$mean)]
par("lty")
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="blue")
intsum$interval[which.max(intsum$mean)]
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
```{r, results="hide", echo=FALSE}
library(dplyr)
library(plyr)
library(ggplot2)
library(reshape2)
```
## Loading and preprocessing the data
```{r}
data<- read.csv("activity.csv")
dates<- group_by(data, date)
```
## What is mean total number of steps taken per day?
```{r}
hist(data$steps, breaks= 50, main="Frequency of Steps Histogram", xlab="Number of Daily Steps")
stmean<- mean(data$steps, na.rm=T)
stmean
stmedian<- median(data$steps, na.rm=T)
stmedian
```
## What is the average daily activity pattern?
```{r}
dates<- group_by(data, interval)
intsum<- summarise(dates, mean=mean(steps, na.rm=T), median=median(steps, na.rm=T))
```
```{r}
par("lty")
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
intsum$interval[which.max(intsum$mean)]
```
## Imputing missing values
### Number of missing values
```{r}
Nas<-sum(is.na(data$steps))
Nas
```
### Impute NA value based on mean value for that interval
```{r}
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
imp1 <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
hist(imp1$steps, breaks= 50, main="Frequency of Steps Histogram", xlab="Number of Daily Steps")
stmean1<- mean(imp1$steps, na.rm=T)
stmean1
stmedian1<- median(imp1$steps, na.rm=T)
stmedian1
```
## Are there differences in activity patterns between weekdays and weekends?
```{r}
```
plot(intsum$interval, intsum$mean, type="l", main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
abline(v=835, col="red")
qplot(intsum$interval, intsum$mean)
?qplot
qplot(intsum$interval, intsum$mean, geom="line")
qplot(intsum$interval, intsum$mean, geom="line",main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
qplot(data=intsum, interval, mean,  geom="line",main="Mean Steps by Daily Interval", xlab="Daily Interval", ylab="Mean Number of Steps")
